// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Timeline component renders Timeline 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Timeline
    onClickBack={[MockFunction]}
    onClickNext={[MockFunction]}
    percentProgress="40"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="timeline-nav timeline-nav--back"
        >
          <Icon
            className=""
            color=""
            name="chevron-up"
            onClick={[Function]}
            style={Object {}}
          />
        </div>,
        <ProgressBar
          percentProgress="40"
        />,
        <div
          className="timeline-nav timeline-nav--next"
          onClick={[Function]}
        >
          <Icon
            className=""
            color=""
            name="chevron-down"
            style={Object {}}
          />
        </div>,
      ],
      "className": "timeline",
      "onClick": [MockFunction],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Icon
            className=""
            color=""
            name="chevron-up"
            onClick={[Function]}
            style={Object {}}
          />,
          "className": "timeline-nav timeline-nav--back",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "",
            "color": "",
            "name": "chevron-up",
            "onClick": [Function],
            "style": Object {},
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "percentProgress": "40",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Icon
            className=""
            color=""
            name="chevron-down"
            style={Object {}}
          />,
          "className": "timeline-nav timeline-nav--next",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "",
            "color": "",
            "name": "chevron-down",
            "style": Object {},
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="timeline-nav timeline-nav--back"
          >
            <Icon
              className=""
              color=""
              name="chevron-up"
              onClick={[Function]}
              style={Object {}}
            />
          </div>,
          <ProgressBar
            percentProgress="40"
          />,
          <div
            className="timeline-nav timeline-nav--next"
            onClick={[Function]}
          >
            <Icon
              className=""
              color=""
              name="chevron-down"
              style={Object {}}
            />
          </div>,
        ],
        "className": "timeline",
        "onClick": [MockFunction],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Icon
              className=""
              color=""
              name="chevron-up"
              onClick={[Function]}
              style={Object {}}
            />,
            "className": "timeline-nav timeline-nav--back",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "",
              "color": "",
              "name": "chevron-up",
              "onClick": [Function],
              "style": Object {},
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "percentProgress": "40",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Icon
              className=""
              color=""
              name="chevron-down"
              style={Object {}}
            />,
            "className": "timeline-nav timeline-nav--next",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "",
              "color": "",
              "name": "chevron-down",
              "style": Object {},
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
